<? namespace Bitrix\Main\UpdateSystem;$GLOBALS['____1104111121']= array(base64_decode(''.'ZnV'.'uY3'.'Rpb'.'2'.'5fZXhp'.'c'.'3'.'Rz'),base64_decode('ZGVma'.'W5lZA=='),base64_decode(''.'cGhwdmVyc2lvb'.'g=='),base64_decode('Y2xh'.'c'.'3Nf'.'ZXhpc'.'3Rz'));if(!function_exists(__NAMESPACE__.'\\___1931681949')){function ___1931681949($_651067767){static $_1299689335= false; if($_1299689335 == false) $_1299689335=array('TElDRU5'.'TR'.'V9LR'.'V'.'k=','bGF'.'u'.'Z'.'w'.'==','dXR'.'m','WQ==',''.'c3RhY'.'m'.'xl','bWFpbg==',''.'c3RhYm'.'xlX3Zlcn'.'Npb25zX29ubH'.'k=','WQ==','Q'.'0'.'FOR1p'.'JUA==','Z3pj'.'b21wc'.'mV'.'z'.'cw==','WQ='.'=','Tg='.'=',''.'U1VQRF9EQlM=','WEU=',''.'WQ==','T'.'g='.'=',''.'U1V'.'QRF9'.'VUl'.'M=','Q'.'0x'.'JR'.'U5U'.'X1N'.'JVEU=',''.'U0VSVkVSX0'.'5'.'BTUU=','c3Bk','bWFpbg'.'==','Y3JjX2N'.'vZGU=','','Z'.'GJ2','U1VQRF9W'.'RV'.'I=','VVB'.'EQVRFX1NZU1'.'RFTV'.'9WRVJTS'.'U9OX0E=','','U'.'1'.'VQ'.'RF9TUl'.'M=',''.'UlU=','U1VQRF9'.'DT'.'VA=','Tg'.'==','U1'.'VQ'.'RF9TVFM=','UkE=','T'.'ElD'.'RU5'.'TRV9TSU'.'dORUQ=','Q0xJ'.'RU5UX1BI'.'UFZFU'.'g==',''.'TkdJTlg=','b'.'W'.'Fpbg='.'=','dXBkY'.'X'.'RlX3'.'VzZV9'.'uZ2'.'lu'.'e'.'A'.'==','WQ'.'==','U01E','bW'.'Fpbg='.'=','d'.'XBkY'.'XRlX3NhZm'.'VfbW9'.'kZQ='.'=','Tg==','V'.'kVSU0lPT'.'g==','VFlQRU5D','Q'.'0h'.'IQg==','SFRUUF9I'.'T1NU','Q1'.'NBQg'.'==','U0VSVkVSX0'.'FE'.'R'.'FI=','U1VJRA'.'==','QVBQTEl'.'D'.'QVRJT'.'04=','','Y'.'2x1c'.'3Rlcg==','Q0NsdXN0ZX'.'I=','PUF'.'DV'.'ElW'.'RQ==','WQ==','L2JpdH'.'Jp'.'eC9tb2R1bGVz'.'L21haW4vY2'.'x'.'h'.'c3N'.'lcy9nZW'.'5'.'lcmFsL3V'.'wZG'.'F0'.'ZV9'.'jbGl'.'lbnQucGhw','LQ==','bWFp'.'bg==','Tg==','RA==','RQ==','V'.'A==','R'.'g==','L'.'2Jpd'.'H'.'J'.'peC'.'9tb'.'2R1bGVz'.'L2'.'1ha'.'W'.'4vY2xh'.'c3'.'Nlcy9nZW5lcmFsL'.'3'.'Vw'.'ZGF0'.'ZV9jb'.'GllbnQu'.'cGhw','',''.'L2Jp'.'d'.'HJpeC9tb2R'.'1bGVzL21h'.'aW4vY'.'2xhc3Nlcy9'.'nZW5lcmF'.'sL'.'3V'.'wZG'.'F0ZV9jbGllbnQu'.'c'.'Ghw','');return base64_decode($_1299689335[$_651067767]);}}; use Bitrix\Main\Application; use Bitrix\Main\License; use Bitrix\Main\Loader; use Bitrix\Main\SystemException; use Bitrix\Main\SiteTable; class PortalInfo{ private License $_2095037697; public function __construct(){ $this->_2095037697= Application::getInstance()->getLicense();} public function common(): array{ global $DB; return[ ___1931681949(0) => $this->_2095037697->getHashLicenseKey(), ___1931681949(1) => LANGUAGE_ID, ___1931681949(2) => ___1931681949(3), ___1931681949(4) => \COption::GetOptionString(___1931681949(5), ___1931681949(6), ___1931681949(7)), ___1931681949(8) => $GLOBALS['____1104111121'][0](___1931681949(9))? ___1931681949(10): ___1931681949(11), ___1931681949(12) => $DB->type, ___1931681949(13) =>(isset($DB->_307791029) && $DB->_307791029)? ___1931681949(14): ___1931681949(15), ___1931681949(16) => $this->_2095037697->getActiveUsersCount(), ___1931681949(17) => $_SERVER[___1931681949(18)], ___1931681949(19) => \COption::GetOptionString(___1931681949(20), ___1931681949(21), ___1931681949(22)), ___1931681949(23) => $this->__368303827(), ___1931681949(24) => $GLOBALS['____1104111121'][1](___1931681949(25))? UPDATE_SYSTEM_VERSION_A: ___1931681949(26), ___1931681949(27) => $this->__732896517() ?? ___1931681949(28), ___1931681949(29) => ___1931681949(30), ___1931681949(31) => $this->__121209287() ?? ___1931681949(32), ___1931681949(33) => $this->__75027995(), ___1931681949(34) => $GLOBALS['____1104111121'][2](), ___1931681949(35) => \COption::GetOptionString(___1931681949(36), ___1931681949(37), ___1931681949(38)), ___1931681949(39) => \COption::GetOptionString(___1931681949(40), ___1931681949(41), ___1931681949(42)), ___1931681949(43) => SM_VERSION, ___1931681949(44) => $this->getLicenseType(), ___1931681949(45) => $_SERVER[___1931681949(46)], ___1931681949(47) => $_SERVER[___1931681949(48)], ___1931681949(49) => $GLOBALS[___1931681949(50)]->GetServerUniqID(),];} private function __368303827(): string{ global $DB; $_338650662= $DB->GetVersion(); return $_338650662 !== false? $_338650662: ___1931681949(51);} private function __732896517():?int{ if(Loader::includeModule(___1931681949(52)) && $GLOBALS['____1104111121'][3](___1931681949(53))){ return \CCluster::getServersCount();} return null;} private function __121209287():?int{ return SiteTable::getCount([___1931681949(54) => ___1931681949(55)]);} private function __75027995(): string{ require_once(Application::getDocumentRoot(). ___1931681949(56)); $_250341396= \CUpdateClient::getNewLicenseSignedKey(); return $_250341396.___1931681949(57).\COption::GetOptionString(___1931681949(58), $_250341396, ___1931681949(59));} public function getLicenseType(): string{ if($this->_2095037697->isDemo()){ return ___1931681949(60);} elseif($this->_2095037697->isEncoded()){ return ___1931681949(61);} elseif($this->_2095037697->isTimeBound()){ return ___1931681949(62);} else{ return ___1931681949(63);}} public function getModules(): array{ require_once(Application::getDocumentRoot(). ___1931681949(64)); $_715209165= ___1931681949(65); $_932818438= \CUpdateClient::GetCurrentModules($_715209165); $_75476109=(\CUpdateExpertMode::isEnabled() && \CUpdateExpertMode::isCorrectModulesStructure([])); if($_75476109){ $_932818438= \CUpdateExpertMode::processModulesFrom([], $_932818438);} if(!empty($_715209165)){ throw new SystemException($_715209165);} return $_932818438;} public function getLanguages(): array{ require_once(Application::getDocumentRoot(). ___1931681949(66)); $_715209165= ___1931681949(67); $_1776767063= \CUpdateClient::GetCurrentLanguages($_715209165); if(!empty($_715209165)){ throw new SystemException($_715209165);} return $_1776767063;}}?>