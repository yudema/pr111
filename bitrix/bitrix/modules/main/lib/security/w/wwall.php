<? namespace Bitrix\Main\Security\W;$GLOBALS['____1955465197']= array(base64_decode('dG'.'ltZQ=='),base64_decode('dGl'.'tZQ=='),base64_decode(''.'an'.'Nvb'.'l'.'9'.'kZWNvZGU'.'='),base64_decode('YXJ'.'yY'.'X'.'lfbW'.'V'.'y'.'Z2U='),base64_decode(''.'am9pbg=='),base64_decode('am9'.'pb'.'g'.'='.'='),base64_decode('am9p'.'bg='.'='),base64_decode('YXJy'.'YXlfcG9w'),base64_decode('YXJyYX'.'lfc2hpZnQ='),base64_decode(''.'Y'.'XJ'.'y'.'YXlfc2hpZnQ='),base64_decode('Y'.'X'.'JyYX'.'lfc2h'.'pZnQ='),base64_decode('YXJy'.'Y'.'X'.'lfc'.'2hpZ'.'nQ='),base64_decode('YXJyYXlfbWVyZ2U='),base64_decode('a'.'XNfY'.'XJyYXk='),base64_decode('YXJyYX'.'lfbW'.'V'.'yZ2U='),base64_decode('a'.'W'.'5'.'fYXJy'.'YXk='),base64_decode('aW5f'.'Y'.'XJyYXk='),base64_decode('aW5fYXJyYXk='),base64_decode('aW5fYXJyY'.'Xk'.'='),base64_decode('aW5'.'fY'.'X'.'JyYXk='),base64_decode('dGltZQ=='),base64_decode('dGl'.'tZQ=='),base64_decode('YXJy'.'YXlfbW'.'Fw'),base64_decode(''.'anNvbl9lbmNvZGU='),base64_decode('anNvbl9'.'l'.'bmN'.'vZGU='),base64_decode('am9pbg='.'='));if(!function_exists(__NAMESPACE__.'\\___1648633089')){function ___1648633089($_1279922163){static $_1524238101= false; if($_1524238101 == false) $_1524238101=array('V1dBTE'.'xf'.'TE'.'9DSw'.'==','c2VjdX'.'JpdHk=','Y2FjaG'.'U=','d'.'HR'.'s',''.'REFUQQ='.'=','e'.'yI=','V1d'.'BTExfT'.'E9'.'D'.'Sw'.'='.'=','c2Vj'.'dX'.'JpdHk=','U0VDVVJJ'.'V'.'FlfV1dBT'.'ExfRV'.'h'.'D'.'RVBUSU9O','RkFJ'.'TF9D'.'SEV'.'DS0l'.'O'.'Rw==',''.'Q2'.'FuIG5vdC'.'BleGV'.'jdXRlIHd3Y'.'Wx'.'sIHJ1bG'.'VzOiA=','IFRyY'.'WNlOiA=','UkVRVU'.'VTV'.'F9VUkk=','a2V5cw==','dm'.'FsdWVz',''.'U0VDVVJ'.'JV'.'FlfV1'.'dB'.'TExf'.'TU9'.'ES'.'UZZ','Lg==','U'.'0V'.'DVVJJ'.'V'.'F'.'lfV1d'.'BTExf'.'VU5TRVQ=','L'.'g==','U0V'.'DV'.'VJ'.'JV'.'Flf'.'V1dB'.'TExfRVhJVA'.'='.'=',''.'Lg==','Z2xvYmFs',''.'a'.'2V5cw'.'==','dmFs'.'dWVz','Z'.'2V0','Z2'.'V0','cG'.'9zdA==','c'.'G'.'9'.'zdA'.'==',''.'Y2'.'9'.'va2ll',''.'Y29va2ll','cmVx'.'dWV'.'zdA==',''.'c'.'mVx'.'dWVzd'.'A'.'==','Z2'.'xv'.'Ym'.'Fs','Z2xvYmFs','bWF'.'pb'.'l9zZWM=','V1dB'.'T'.'ExfQU'.'N'.'UV'.'U'.'FMSVpFX1JVTE'.'VT','dg='.'=','dmVyc2lvbg'.'==','aQ'.'==','aXN'.'JbnN'.'0YWxsZWQ'.'=','c29'.'ja2V0VGltZW9'.'1'.'d'.'A==','c3'.'RyZWF'.'tVGltZW91d'.'A==','K'.'Cc=','ZG'.'F0YQ==','JywgJw==','bW9kdWxl','JywgJw==','bW9kdWx'.'lX'.'3ZlcnNpb24=',''.'Jyk=','LCA=','U0VDV'.'V'.'JJVFlfV'.'1dBTExfRVhDR'.'VBUSU'.'9O','bWFpbg='.'=',''.'RkFJTF'.'9SRUZ'.'S'.'RVNISU5H','Q2FuIG5vdCBy'.'ZW'.'ZyZXN'.'oIHd3YWxsIHJ1bGVzO'.'iA=',''.'IFRyY'.'WN'.'lOiA'.'=','Z'.'GF0'.'YQ==','eyI'.'=','LS'.'0tLS1CRUdJTiBQ'.'V'.'U'.'JMS'.'U'.'M'.'gS0VZ'.'LS0t'.'LS0'.'=','Ck1JSU'.'JJ'.'akFOQmdrcWhraU'.'c'.'5dz'.'BCQVFFRk'.'FBT0NBUT'.'hB'.'TUl'.'JQkNnS0NBUUVBcT'.'hRR'.'TB'.'Ia'.'m1'.'ISl'.'V'.'TdFd'.'WNm'.'4'.'wemEKUlZvT'.'HgwM'.'kt6YmZyYlM'.'vUDZz'.'V2F4V'.'Hp3OFNlR1R'.'0Y'.'lRDT3J'.'wSG'.'k1U'.'UY2T1J5alovWHh6L0tMVTFHY'.'m9mOUN'.'aMwo0e'.'jdT'.'a3FVdDY2'.'aW'.'JYdk9GQng0Znc'.'vQV'.'BQU'.'kdEc'.'XRtM'.'G5EM2'.'ZnR'.'3N'.'1M'.'1JlUGd3'.'MjlpOCt2bTdtdEJL'.'SlV'.'ZbD'.'R'.'yClZwYj'.'ZzZlpFVDlL'.'RW'.'I'.'2'.'VD'.'FIRF'.'ltRXZjMWhxL2'.'lpd'.'Xl'.'4THJ'.'aWmk'.'1'.'U'.'TZVZmY'.'0VU'.'V2V'.'Ekr'.'Njhzc0ZSa1'.'Erb3d'.'UUnkK'.'Z'.'U9JTW'.'JGa'.'E0vV'.'VRt'.'Z'.'l'.'ZZYlRSRnkyb1VROFd'.'N'.'em'.'Eybko1U2Fo'.'em'.'kxVU'.'tPMWpBal'.'hUUFJyemM3QW'.'p1NjM5'.'aj'.'FP'.'MApw'.'cHFmbTV4Z1dsRkFKa0hRVGdi'.'ZGQ1Q'.'Vd'.'xRE'.'ZRa3Q5SEtrWStUb'.'mZCTEdWT'.'X'.'ZWeVB3VEhOV1FZQXc0'.'eHBnL'.'3dBC'.'lp'.'3SUR'.'BU'.'UFC'.'Ci0tLS0tRU5EI'.'FBVQkx'.'JQyBLRVktLS0'.'t'.'LQ='.'=');return base64_decode($_1524238101[$_1279922163]);}}; use Bitrix\Main\Application; use Bitrix\Main\Config\Option; use Bitrix\Main\Data\Cache; use Bitrix\Main\ModuleManager; use Bitrix\Main\Security\PublicKeyCipher; use Bitrix\Main\SystemException; use Bitrix\Main\Web\HttpClient; use Bitrix\Main\Web\Json; use Bitrix\Main\Security\W\Rules\Rule; use Bitrix\Main\Security\W\Rules\Results\RuleAction; use Bitrix\Main\Security\W\Rules\Results\RuleResult; use Bitrix\Main\Security\W\Rules\Results\CheckResult; use Bitrix\Main\Security\W\Rules\Results\ModifyResult; use Bitrix\Main\Type\ArrayHelper; use Bitrix\Main\Security\W\Rules\RuleRecordTable; class WWall{ const CACHE_RULES_TTL= 10800; private static $_470807315= 'https://wwall.bitrix.info/rules.php'; protected $_1344147172= true; public function handle(){ try{  $_57893006= Cache::createInstance(); $_2127969031= false; if($_57893006->initCache(static::CACHE_RULES_TTL, 'WWALL_LOCK', 'security')){ $_720755077= $_57893006->getVars(); if($GLOBALS['____1955465197'][0]()- $_720755077> round(0+6.6666666666667+6.6666666666667+6.6666666666667)){  $_2119653334= Application::getConnection(); $_1083023010= RuleRecordTable::getTableName(); $_2119653334->truncateTable($_1083023010); RuleRecordTable::cleanCache(); $_57893006->clean(___1648633089(0), ___1648633089(1));}} elseif($_57893006->startDataCache()){  $_57893006->endDataCache($GLOBALS['____1955465197'][1]()); $_2127969031= true;}  $_208941473= RuleRecordTable::getList([ ___1648633089(2) =>[___1648633089(3) => round(0+720+720+720+720+720)* round(0+4.8+4.8+4.8+4.8+4.8)* round(0+1.4+1.4+1.4+1.4+1.4)]])->fetchAll(); foreach($_208941473 as $_1050493015){ $_2141185485= new PublicKeyCipher; $_1529820138= $_2141185485->decrypt($_1050493015[___1648633089(4)], static::__1819147843()); if(!str_starts_with($_1529820138, ___1648633089(5))){ continue;} $_1321213840= $GLOBALS['____1955465197'][2]($_1529820138, true); if(!empty($_1321213840)){ $_1994093918= Rule::make($_1321213840); $_1226541899= $this->handleRule($_1994093918); $this->applyHandlingResults($_1226541899);}}  if($_2127969031){ $_57893006->clean(___1648633089(6), ___1648633089(7));}} catch(\Throwable $_280456303){ $this->logEvent( ___1648633089(8), ___1648633089(9), ___1648633089(10). $_280456303->getMessage(). ___1648633089(11). $_280456303->getTraceAsString());}}  public function handleRule(Rule $_1994093918): array{ $_1226541899=[]; if($_1994093918->matchPath($_SERVER[___1648633089(12)])){  $_889535950= $this->getContextElements($_1994093918->getContext()); foreach($_889535950 as $_178721676 => &$_1229500572){ $_1226541899= $GLOBALS['____1955465197'][3]($_1226541899, $this->recursiveContextKeyHandle($_178721676, $_1229500572,[], $_1994093918));}} return $_1226541899;}  public function applyHandlingResults(array $_1226541899){ $_889535950= $this->getContextElements([ 'get', 'post', 'cookie', 'request', 'global']); foreach($_1226541899 as $_62250087){ $_1229500572=& $_889535950[$_62250087->getContextName()]; $_1025255025= $_62250087->getRuleResult(); $_1994093918= $_62250087->getRule(); if($_1025255025 instanceof ModifyResult){ if($_1994093918->getProcess() === ___1648633089(13)){  static::rewriteContextKey( $_62250087->getContextName(), $_1229500572, $_62250087->getContextKey(), $_1025255025->getCleanValue());} elseif($_1994093918->getProcess() === ___1648633089(14)){ static::rewriteContextValue( $_62250087->getContextName(), $_1229500572, $_62250087->getContextKey(), $_1025255025->getCleanValue());} $this->logEvent( ___1648633089(15), $_62250087->getContextName(), $GLOBALS['____1955465197'][4](___1648633089(16), $_62250087->getContextKey()));} elseif($_1025255025 instanceof CheckResult &&!$_1025255025->isSuccess()){ if($_1025255025->getAction() === RuleAction::UNSET){ static::unsetContextValue( $_62250087->getContextName(), $_1229500572, $_62250087->getContextKey(),); $this->logEvent( ___1648633089(17), $_62250087->getContextName(), $GLOBALS['____1955465197'][5](___1648633089(18), $_62250087->getContextKey()));} elseif($_1025255025->getAction() === RuleAction::EXIT){ $this->logEvent( ___1648633089(19), $_62250087->getContextName(), $GLOBALS['____1955465197'][6](___1648633089(20), $_62250087->getContextKey())); exit;}}}} public function disableEventLogging(){ $this->_1344147172= false;} protected function rewriteContextKey($_178721676, &$_1229500572, $_863689183, $_2102816461){ $_457990939= $_863689183;  $GLOBALS['____1955465197'][7]($_457990939); $_457990939[]= $_2102816461; if($_178721676 === ___1648633089(21)){ $_956957292= $GLOBALS['____1955465197'][8]($_863689183); $GLOBALS['____1955465197'][9]($_457990939); if(empty($_863689183)){ $GLOBALS[$_2102816461]= $GLOBALS[$_956957292]; unset($GLOBALS[$_956957292]);} else{ $_1229500572=& $GLOBALS[$_956957292]; $_1455699738= ArrayHelper::getByNestedKey($_1229500572, $_863689183);  ArrayHelper::setByNestedKey($_1229500572, $_457990939, $_1455699738);  ArrayHelper::unsetByNestedKey($_1229500572, $_863689183);}} else{ $_1455699738= ArrayHelper::getByNestedKey($_1229500572, $_863689183);  ArrayHelper::setByNestedKey($_1229500572, $_457990939, $_1455699738);  ArrayHelper::unsetByNestedKey($_1229500572, $_863689183);}} protected function rewriteContextValue($_178721676, &$_1229500572, $_1675854298, $_1455699738){ if($_178721676 === 'global'){ $_956957292= $GLOBALS['____1955465197'][10]($_1675854298); if(empty($_1675854298)){ $GLOBALS[$_956957292]= $_1455699738;} else{ $_1229500572=& $GLOBALS[$_956957292]; ArrayHelper::setByNestedKey($_1229500572, $_1675854298, $_1455699738);}} else{  ArrayHelper::setByNestedKey($_1229500572, $_1675854298, $_1455699738);}} protected function unsetContextValue($_178721676, &$_1229500572, $_1675854298){ if($_178721676 === 'global'){ $_956957292= $GLOBALS['____1955465197'][11]($_1675854298); if(empty($_1675854298)){ unset($GLOBALS[$_956957292]);} else{ $_1229500572=& $GLOBALS[$_956957292]; ArrayHelper::unsetByNestedKey($_1229500572, $_1675854298);}} else{ ArrayHelper::unsetByNestedKey($_1229500572, $_1675854298);}}  protected function recursiveContextKeyHandle(string $_178721676, array &$_1229500572, array $_2065594951, Rule $_1994093918): array{  $_1226541899=[]; foreach($_1229500572 as $_180969730 => $_1455699738){ $_1675854298= $GLOBALS['____1955465197'][12]($_2065594951,[$_180969730]); if($_1994093918->matchKey($_1675854298)){  if($_1994093918->getProcess() === ___1648633089(22)){ $_1025255025= $_1994093918->evaluate($_180969730);} elseif($_1994093918->getProcess() === ___1648633089(23)){ $_1025255025= $_1994093918->evaluateValue($_1455699738);}  if(!empty($_1025255025) && $_1025255025 instanceof RuleResult){ $_1226541899[]= new HandlingResult($_178721676, $_1675854298, $_1025255025, $_1994093918);}}  if($GLOBALS['____1955465197'][13]($_1455699738)){ $_1226541899= $GLOBALS['____1955465197'][14]($_1226541899, $this->recursiveContextKeyHandle( $_178721676, $_1229500572[$_180969730], $_1675854298, $_1994093918));}} return $_1226541899;} protected function getContextElements(array $_691983217){ $_1837505960=[]; if($GLOBALS['____1955465197'][15](___1648633089(24), $_691983217, true)){ $_1837505960[___1648633089(25)]= &$_GET;} if($GLOBALS['____1955465197'][16](___1648633089(26), $_691983217, true)){ $_1837505960[___1648633089(27)]= &$_POST;} if($GLOBALS['____1955465197'][17](___1648633089(28), $_691983217, true)){ $_1837505960[___1648633089(29)]= &$_COOKIE;} if($GLOBALS['____1955465197'][18](___1648633089(30), $_691983217, true)){ $_1837505960[___1648633089(31)]= &$_REQUEST;} if($GLOBALS['____1955465197'][19](___1648633089(32), $_691983217, true)){ $_1837505960[___1648633089(33)]= $GLOBALS;} return $_1837505960;} public static function refreshRules(){ try{ $_137444037= Option::get('main_sec', 'WWALL_ACTUALIZE_RULES', 0); if(($GLOBALS['____1955465197'][20]()- $_137444037)< static::CACHE_RULES_TTL){ return;} Option::set(___1648633089(34), ___1648633089(35), $GLOBALS['____1955465197'][21]()); $_146397652= null;  $_1922638643= $GLOBALS['____1955465197'][22](function($_1314745800){ return[___1648633089(36) => $_1314745800[___1648633089(37)], ___1648633089(38) => (int) $_1314745800[___1648633089(39)]];}, ModuleManager::getModulesFromDisk());  $_632156941= new HttpClient([ ___1648633089(40) => round(0+1+1+1+1+1), ___1648633089(41) => round(0+1+1+1+1+1)]); $_1433038958= $_632156941->post( static::$_470807315,[ 'modules' => $GLOBALS['____1955465197'][23]($_1922638643), 'license' => Application::getInstance()->getLicense()->getHashLicenseKey()]); if($_632156941->getStatus() == round(0+100+100) &&!empty($_1433038958)){ $_146397652= Json::decode($_1433038958);}  if($_146397652 !== null){ $_2119653334= Application::getConnection(); $_1083023010= RuleRecordTable::getTableName(); if(!empty($_146397652)){ foreach($_146397652 as $_149327397){ if(!static::checkRuleSign($_149327397)){ throw new SystemException('Invalid sign for rule '.$GLOBALS['____1955465197'][24]($_149327397));}}}  $_2119653334->truncateTable($_1083023010);  if(!empty($_146397652)){ $_1906340457=[]; foreach($_146397652 as $_149327397){ $_1906340457[]= ___1648633089(42). $_2119653334->getSqlHelper()->forSql($_149327397[___1648633089(43)]). ___1648633089(44). $_2119653334->getSqlHelper()->forSql($_149327397[___1648633089(45)]). ___1648633089(46). $_2119653334->getSqlHelper()->forSql($_149327397[___1648633089(47)]). ___1648633089(48);} $_2111654320= $GLOBALS['____1955465197'][25](___1648633089(49), $_1906340457);  $_2119653334->query("INSERT INTO {$_1083023010} (DATA, MODULE, MODULE_VERSION) VALUES {$_2111654320}");  RuleRecordTable::cleanCache();}}} catch(\Throwable $_280456303){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, ___1648633089(50), ___1648633089(51), ___1648633089(52), ___1648633089(53). $_280456303->getMessage(). ___1648633089(54). $_280456303->getTraceAsString());}} protected static function checkRuleSign($_1994093918){ $_2141185485= new PublicKeyCipher; $_1321213840= $_2141185485->decrypt($_1994093918[___1648633089(55)], static::__1819147843()); return str_starts_with($_1321213840, ___1648633089(56));} private static function __1819147843(){ $_2114345656= ''; $_2114345656 .= ___1648633089(57); $_2114345656 .= ___1648633089(58); return $_2114345656;} protected function logEvent($_668711911, $_721902694, $_806462668){ if($this->_1344147172){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, $_668711911, 'main', $_721902694, $_806462668);}}}?>